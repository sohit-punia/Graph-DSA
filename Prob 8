785. Is Graph Bipartite? by bfs methid

class Solution {
    bool check(int start, vector<vector<int>>& graph, vector<int>& color){
        queue<int> q;
        q.push(start);
        color[start] = 0;   // start with color 0

        while(!q.empty()){
           int node = q.front();
            q.pop();

            for (auto it : graph[node]) {
                // if the adjacent node is not colored
                if (color[it] == -1) {
                    color[it] = 1 - color[node];  // opposite color
                    q.push(it);
                }
                // if the adjacent has same color -> not bipartite
                else if (color[it] == color[node]) {
                    return false;
                }
            }  
        }
        return true;
    }
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> color(n, -1);   // -1 means uncolored
        // multipule component graph
        for(int i = 0; i < n; i++){
            if(color[i] == -1){
                if(!check(i , graph , color)){
                    return false;
                }
            }
        }
        return true;
    }
};
