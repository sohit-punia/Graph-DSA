Topological sort

class Solution {
    void dfs(int node, vector<int>& vis, stack<int>& st, vector<int> adj[]){
        vis[node] = 1;
        for(auto it : adj[node]){
            if(!vis[it]){
                dfs(it , vis , st , adj);
            }
        }
        st.push(node);
    }
  public:
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        // code here
        vector<int> adj[V];
        for (auto &e : edges) {
            adj[e[0]].push_back(e[1]);
        }
        //visted arry + stack
        vector<int > vis(V , 0);
        stack<int> st;
        
        //dfs
        for(int i = 0; i < V; i++){
            if(!vis[i]){
                dfs(i , vis , st , adj);
            }
        }
        //  get answer from stack
        vector<int> ans;
        while (!st.empty()) {
            ans.push_back(st.top());
            st.pop();
        }
        return ans;
        
        
    }
};
