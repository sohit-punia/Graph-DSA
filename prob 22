126. Word Ladder II 
*** TLE ERROR When Submit by this approch*** no issue for interviews

vector<vector<string>> findLadders(string beginWord, string endWord, vector<string>& wordList) {
    unordered_set<string> st(wordList.begin(), wordList.end());
    vector<vector<string>> ans;
    if (!st.count(endWord)) return ans;

    queue<vector<string>> q;
    q.push({beginWord});

    vector<string> usedOnLevel;
    usedOnLevel.push_back(beginWord);

    int level = 1; // current path length (beginWord alone)
    while (!q.empty()) {
        vector<string> path = q.front();
        q.pop();

        // when we reach a new level, erase all words used in the previous level
        if ((int)path.size() > level) {
            level = (int)path.size();
            for (const auto& w : usedOnLevel) st.erase(w);
            usedOnLevel.clear();
        }

        string word = path.back();

        // if we reached endWord, record this shortest path
        if (word == endWord) {
            if (ans.empty() || (int)ans[0].size() == (int)path.size()) {
                ans.push_back(path);
            }
            // no need to continue expanding from endWord on this level
            continue;
        }

        // try all single-letter transformations
        for (int i = 0; i < (int)word.size(); i++) {
            char original = word[i];
            for (char c = 'a'; c <= 'z'; c++) {
                word[i] = c;
                if (st.count(word)) {
                    path.push_back(word);
                    q.push(path);
                    usedOnLevel.push_back(word); // mark for removal after level ends
                    path.pop_back();
                }
            }
            word[i] = original;
        }
    }
    return ans;
}
